{
    "name": "python_freshfesk_salesforce_loader_update_freshdesk_companies",
    "flow": [
        {
            "id": 7,
            "module": "gateway:CustomWebHook",
            "version": 1,
            "parameters": {
                "hook": 65726,
                "maxResults": null
            },
            "mapper": {},
            "metadata": {
                "designer": {
                    "x": 0,
                    "y": 150
                },
                "restore": {
                    "parameters": {
                        "hook": {
                            "data": {
                                "editable": "true"
                            },
                            "label": "Python FreshDesk & Salesforce Accounts Info"
                        },
                        "maxResults": {
                            "empty": true
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "hook",
                        "type": "hook:gateway-webhook",
                        "label": "Webhook",
                        "required": true
                    },
                    {
                        "name": "maxResults",
                        "type": "number",
                        "label": "Maximum number of results"
                    }
                ],
                "interface": [
                    {
                        "name": "value",
                        "type": "buffer"
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 20,
            "module": "builtin:BasicFeeder",
            "version": 1,
            "parameters": {},
            "mapper": {
                "array": "{{7.data}}"
            },
            "metadata": {
                "designer": {
                    "x": 300,
                    "y": 150
                },
                "restore": {
                    "expect": {
                        "array": {
                            "mode": "edit"
                        }
                    }
                },
                "expect": [
                    {
                        "mode": "edit",
                        "name": "array",
                        "spec": [],
                        "type": "array",
                        "label": "Array"
                    }
                ]
            }
        },
        {
            "id": 28,
            "module": "http:ActionSendDataBasicAuth",
            "version": 3,
            "parameters": {
                "key": 2746,
                "handleErrors": false
            },
            "filter": {
                "name": "Company ID Exists",
                "conditions": [
                    [
                        {
                            "a": "{{20.company_id}}",
                            "o": "exist"
                        }
                    ]
                ]
            },
            "mapper": {
                "ca": "",
                "qs": [],
                "url": "https://embraceio.freshdesk.com/api/v2/companies/{{20.company_id}}",
                "data": "{{20.fields_to_update}}",
                "gzip": true,
                "method": "put",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "timeout": "",
                "useMtls": false,
                "bodyType": "raw",
                "contentType": "application/json",
                "serializeUrl": false,
                "shareCookies": false,
                "parseResponse": true,
                "followRedirect": true,
                "useQuerystring": false,
                "followAllRedirects": false,
                "rejectUnauthorized": true
            },
            "metadata": {
                "designer": {
                    "x": 600,
                    "y": 150
                },
                "restore": {
                    "expect": {
                        "qs": {
                            "mode": "chose"
                        },
                        "method": {
                            "mode": "chose",
                            "label": "PUT"
                        },
                        "headers": {
                            "mode": "chose",
                            "items": [
                                null
                            ]
                        },
                        "bodyType": {
                            "label": "Raw"
                        },
                        "contentType": {
                            "label": "JSON (application/json)"
                        }
                    },
                    "parameters": {
                        "key": {
                            "label": "Freshdesk API"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "key",
                        "type": "keychain:basicauth",
                        "label": "Credentials",
                        "required": true
                    },
                    {
                        "name": "handleErrors",
                        "type": "boolean",
                        "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "url",
                        "type": "url",
                        "label": "URL",
                        "required": true
                    },
                    {
                        "name": "serializeUrl",
                        "type": "boolean",
                        "label": "Serialize URL",
                        "required": true
                    },
                    {
                        "name": "method",
                        "type": "select",
                        "label": "Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "get",
                                "head",
                                "post",
                                "put",
                                "patch",
                                "delete",
                                "options"
                            ]
                        }
                    },
                    {
                        "name": "headers",
                        "spec": [
                            {
                                "name": "name",
                                "type": "text",
                                "label": "Name",
                                "required": true
                            },
                            {
                                "name": "value",
                                "type": "text",
                                "label": "Value"
                            }
                        ],
                        "type": "array",
                        "label": "Headers"
                    },
                    {
                        "name": "qs",
                        "spec": [
                            {
                                "name": "name",
                                "type": "text",
                                "label": "Name",
                                "required": true
                            },
                            {
                                "name": "value",
                                "type": "text",
                                "label": "Value"
                            }
                        ],
                        "type": "array",
                        "label": "Query String"
                    },
                    {
                        "name": "bodyType",
                        "type": "select",
                        "label": "Body type",
                        "validate": {
                            "enum": [
                                "raw",
                                "x_www_form_urlencoded",
                                "multipart_form_data"
                            ]
                        }
                    },
                    {
                        "name": "parseResponse",
                        "type": "boolean",
                        "label": "Parse response",
                        "required": true
                    },
                    {
                        "name": "timeout",
                        "type": "uinteger",
                        "label": "Timeout",
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    },
                    {
                        "name": "shareCookies",
                        "type": "boolean",
                        "label": "Share cookies with other HTTP modules",
                        "required": true
                    },
                    {
                        "name": "ca",
                        "type": "cert",
                        "label": "Self-signed certificate"
                    },
                    {
                        "name": "rejectUnauthorized",
                        "type": "boolean",
                        "label": "Reject connections that are using unverified (self-signed) certificates",
                        "required": true
                    },
                    {
                        "name": "followRedirect",
                        "type": "boolean",
                        "label": "Follow redirect",
                        "required": true
                    },
                    {
                        "name": "useQuerystring",
                        "type": "boolean",
                        "label": "Disable serialization of multiple same query string keys as arrays",
                        "required": true
                    },
                    {
                        "name": "gzip",
                        "type": "boolean",
                        "label": "Request compressed content",
                        "required": true
                    },
                    {
                        "name": "useMtls",
                        "type": "boolean",
                        "label": "Use Mutual TLS",
                        "required": true
                    },
                    {
                        "name": "contentType",
                        "type": "select",
                        "label": "Content type",
                        "validate": {
                            "enum": [
                                "text/plain",
                                "application/json",
                                "application/xml",
                                "text/xml",
                                "text/html",
                                "custom"
                            ]
                        }
                    },
                    {
                        "name": "data",
                        "type": "buffer",
                        "label": "Request content"
                    },
                    {
                        "name": "followAllRedirects",
                        "type": "boolean",
                        "label": "Follow all redirect",
                        "required": true
                    }
                ]
            },
            "onerror": [
                {
                    "id": 29,
                    "module": "builtin:BasicRouter",
                    "version": 1,
                    "mapper": null,
                    "metadata": {
                        "designer": {
                            "x": 900,
                            "y": 150
                        }
                    },
                    "routes": [
                        {
                            "flow": [
                                {
                                    "id": 30,
                                    "module": "builtin:Break",
                                    "version": 1,
                                    "parameters": {},
                                    "filter": {
                                        "name": "Reprocess Error Code 429 [Too Many Requests]",
                                        "conditions": [
                                            [
                                                {
                                                    "a": "{{28.statusCode}}",
                                                    "b": "429",
                                                    "o": "text:equal"
                                                }
                                            ]
                                        ]
                                    },
                                    "mapper": {
                                        "count": "2",
                                        "retry": true,
                                        "interval": "1"
                                    },
                                    "metadata": {
                                        "designer": {
                                            "x": 1200,
                                            "y": 0
                                        },
                                        "restore": {
                                            "expect": {
                                                "retry": {
                                                    "mode": "chose"
                                                }
                                            }
                                        },
                                        "expect": [
                                            {
                                                "name": "retry",
                                                "type": "boolean",
                                                "label": "Automatically complete execution",
                                                "required": true
                                            },
                                            {
                                                "name": "count",
                                                "type": "uinteger",
                                                "label": "Number of attempts",
                                                "required": true,
                                                "validate": {
                                                    "max": 10000,
                                                    "min": 1
                                                }
                                            },
                                            {
                                                "name": "interval",
                                                "type": "uinteger",
                                                "label": "Interval between attempts",
                                                "required": true,
                                                "validate": {
                                                    "max": 44640,
                                                    "min": 1
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "flow": [
                                {
                                    "id": 31,
                                    "module": "builtin:Ignore",
                                    "version": 1,
                                    "filter": {
                                        "name": "Ignore Error Codes 404 & 409",
                                        "conditions": [
                                            [
                                                {
                                                    "a": "{{28.statusCode}}",
                                                    "b": "404",
                                                    "o": "text:equal"
                                                }
                                            ],
                                            [
                                                {
                                                    "a": "{{28.statusCode}}",
                                                    "b": "409",
                                                    "o": "text:equal"
                                                }
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "designer": {
                                            "x": 1200,
                                            "y": 300
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    "metadata": {
        "instant": true,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 100,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": true,
            "confidential": false,
            "dataloss": true,
            "dlq": true
        },
        "designer": {
            "orphans": [],
            "notes": [
                {
                    "id": 29,
                    "text": "Fresdesk error codes info: https://support.freshdesk.com/en/support/solutions/articles/225440-i-have-encountered-an-error-how-do-i-debug-it-\n",
                    "filter": true
                },
                {
                    "id": 2,
                    "text": "Customer Managed Accounts",
                    "filter": false
                }
            ]
        },
        "zone": "us1.make.com"
    },
    "io": {
        "input_spec": [],
        "output_spec": []
    }
}